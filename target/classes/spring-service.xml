<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--如果<property name="bookMapper" ref="bookMapper"/>中的bookMapper爆红，
        说明project Structure中，spring-dao.xml文件和spring-service.xml文件没有关联起来
        解决方法：
            1. 通过import
            2. 添加进applicationContext.xml配置文件的Spring结构中
    -->
    <!--1. 扫描service下的包-->
    <context:component-scan base-package="com.kliurat.service"/>

    <!--2. 将我们的所有业务类注入到Spring，可以通过配置，或者注解
            配置：添加bean
            注解：在BookServiceImpl.java中的类名上面添加@Service注解+@autowired
    -->
    <bean id="BookServiceImpl" class="com.kliurat.service.BookServiceImpl">
        <property name="bookMapper" ref="bookMapper"/>
    </bean>
    <bean id="UserServiceImpl" class="com.kliurat.service.UserServiceImpl">
        <property name="userMapper" ref="userMapper"/>
    </bean>
    <bean id="BookTypeServiceImpl" class="com.kliurat.service.BookTypeServiceImpl">
        <property name="bookTypeMapper" ref="bookTypeMapper"/>
    </bean>

    <!--3. 声明式事务设置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--4. AOP事务支持-->
    <!--如果还需要添加横切事务的话，还需要些AOP的织入，这就需要去pom.xml中添加织入的依赖，但是目前还不需要-->
    <!--结合AOP实现事务的织入-->
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--给哪些方法配置事务-->
        <!--配置事务的传播特性：new propagation=  -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!--配置事务织入-->
    <aop:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.kliurat.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

</beans>